{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wasadmin\\\\Documents\\\\SWAPIReact\\\\src\\\\PeopleList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport async function PeopleList() {\n  // let persons = [];\n  // let url = 'https://swapi.dev/api/people';\n  // console.log(fetch(url));\n\n  // // const getPersonIdFromUrl = (url) => {\n  // //     const re = /.*people\\/(\\d+).*/\n  // //     const matches = url.match(re)\n  // //     if (!matches) throw \"Bad URL. Not a people URL.\"\n  // //     return matches[1]\n  // //   }\n\n  // while (url) {\n  //     try {\n  //       const fetchedPersons = await fetch(url)\n  //         .then(res => res.json())\n  //         .then(res => { url = res.next; return res })\n  //         .then(res => res.results)\n  //         // .then(res => res.map(p => ({ ...p, id: +getPersonIdFromUrl(p.url) })))\n  //       persons.push(...fetchedPersons);\n  //     }\n  //     catch (ex) {\n  //       console.error(\"Error reading people.\", ex.message);\n  //     }\n  //   }\n  //   console.log(\"All the persons are \", persons)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hello World\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n_c = PeopleList;\nvar _c;\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"names":["PeopleList"],"sources":["C:/Users/wasadmin/Documents/SWAPIReact/src/PeopleList.js"],"sourcesContent":["export async function PeopleList() {\r\n    // let persons = [];\r\n    // let url = 'https://swapi.dev/api/people';\r\n    // console.log(fetch(url));\r\n\r\n    // // const getPersonIdFromUrl = (url) => {\r\n    // //     const re = /.*people\\/(\\d+).*/\r\n    // //     const matches = url.match(re)\r\n    // //     if (!matches) throw \"Bad URL. Not a people URL.\"\r\n    // //     return matches[1]\r\n    // //   }\r\n\r\n    // while (url) {\r\n    //     try {\r\n    //       const fetchedPersons = await fetch(url)\r\n    //         .then(res => res.json())\r\n    //         .then(res => { url = res.next; return res })\r\n    //         .then(res => res.results)\r\n    //         // .then(res => res.map(p => ({ ...p, id: +getPersonIdFromUrl(p.url) })))\r\n    //       persons.push(...fetchedPersons);\r\n    //     }\r\n    //     catch (ex) {\r\n    //       console.error(\"Error reading people.\", ex.message);\r\n    //     }\r\n    //   }\r\n    //   console.log(\"All the persons are \", persons)\r\n\r\n      \r\n\r\n      return (\r\n        <>\r\n          <div>Hello World</div>\r\n        </>\r\n      )\r\n    }\r\n\r\n    \r\n\r\n"],"mappings":";;;AAAA,OAAO,eAAeA,UAAU,GAAG;EAC/B;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIE,oBACE;IAAA,uBACE;MAAA,UAAK;IAAW;MAAA;MAAA;MAAA;IAAA;EAAM,iBACrB;AAEP;AAAC,KAlCiBA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}