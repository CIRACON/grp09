{"ast":null,"code":"export function PeopleList() {\n  let url = 'https://swapi.dev/api/people';\n  console.log(fetch(url));\n\n  //     async function getPeople() {\n  //         let url = 'https://swapi.dev/api/people';\n  //         let persons = [];\n\n  //         while (url) {\n  //           try {\n  //             const fetchedPersons = await fetch(url)\n  //               .then(res => res.json())\n  //               .then(res => { url = res.next; return res })\n  //               .then(res => res.results)\n  //               .then(res => res.map(p => ({ ...p, id: +getPersonIdFromUrl(p.url) })))\n  //             persons.push(...fetchedPersons);\n  //           }\n  //           catch (ex) {\n  //             console.error(\"Error reading people.\", ex.message);\n  //           }\n  //         }\n  //         console.log(\"All the persons are \", persons)\n  //       }\n\n  //       const getPersonIdFromUrl = (url) => {\n  //         const re = /.*people\\/(\\d+).*/\n  //         const matches = url.match(re)\n  //         if (!matches) throw \"Bad URL. Not a people URL.\"\n  //         return matches[1]\n  //       }\n\n  //     return(\n  //         <body>\n  //   <div>\n  //     <h1>Star Wars Universe Lookup</h1>\n  //     <label for=\"searchString\">Who you looking for? <span class=\"small\">(Regular expressions are cool\n  //         here)</span></label>\n  //     <input id=\"searchString\" autocomplete=\"off\" />\n  //   </div>\n  //   <section id=\"people\">\n  //     {persons.map(person => <div>{person.name}</div>)}\n  //   </section>\n  // </body>\n\n  //     )\n}\n_c = PeopleList;\nvar _c;\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"names":["PeopleList","url","console","log","fetch"],"sources":["C:/Users/wasadmin/Documents/SWAPIReact/src/PeopleList.js"],"sourcesContent":["export function PeopleList() {\r\n    let url = 'https://swapi.dev/api/people';\r\n    console.log(fetch(url));\r\n\r\n//     async function getPeople() {\r\n//         let url = 'https://swapi.dev/api/people';\r\n//         let persons = [];\r\n      \r\n//         while (url) {\r\n//           try {\r\n//             const fetchedPersons = await fetch(url)\r\n//               .then(res => res.json())\r\n//               .then(res => { url = res.next; return res })\r\n//               .then(res => res.results)\r\n//               .then(res => res.map(p => ({ ...p, id: +getPersonIdFromUrl(p.url) })))\r\n//             persons.push(...fetchedPersons);\r\n//           }\r\n//           catch (ex) {\r\n//             console.error(\"Error reading people.\", ex.message);\r\n//           }\r\n//         }\r\n//         console.log(\"All the persons are \", persons)\r\n//       }\r\n\r\n//       const getPersonIdFromUrl = (url) => {\r\n//         const re = /.*people\\/(\\d+).*/\r\n//         const matches = url.match(re)\r\n//         if (!matches) throw \"Bad URL. Not a people URL.\"\r\n//         return matches[1]\r\n//       }\r\n      \r\n\r\n//     return(\r\n//         <body>\r\n//   <div>\r\n//     <h1>Star Wars Universe Lookup</h1>\r\n//     <label for=\"searchString\">Who you looking for? <span class=\"small\">(Regular expressions are cool\r\n//         here)</span></label>\r\n//     <input id=\"searchString\" autocomplete=\"off\" />\r\n//   </div>\r\n//   <section id=\"people\">\r\n//     {persons.map(person => <div>{person.name}</div>)}\r\n//   </section>\r\n// </body>\r\n\r\n//     )\r\n}"],"mappings":"AAAA,OAAO,SAASA,UAAU,GAAG;EACzB,IAAIC,GAAG,GAAG,8BAA8B;EACxCC,OAAO,CAACC,GAAG,CAACC,KAAK,CAACH,GAAG,CAAC,CAAC;;EAE3B;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACA;AAAC,KA9CeD,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}