{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wasadmin\\\\Documents\\\\SWAPIReact\\\\src\\\\PersonPage.js\",\n  _s = $RefreshSig$();\n//use useParams \nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function PersonPage() {\n  _s();\n  const params = useParams();\n  const [foundPerson, setFoundPerson] = useState({});\n  const [planetId, setPlanetID] = useState({});\n  let dummyPerson = {};\n  const getIdFromUrl = (entityName, url) => {\n    //debugger\n    const re = new RegExp(`.*${entityName}\\/(\\\\d+).*`);\n    const matches = url.match(re);\n    if (!matches) throw `Bad URL. Not a ${entityName} URL.`;\n    dummyPlanet = matches[1];\n    // return matches[1]\n  };\n\n  const getFilmIdFromUrl = url => getIdFromUrl(\"films\", url);\n  const getPlanetIdFromUrl = url => getIdFromUrl(\"planets\", url);\n\n  //   console.log(`dummy planet is ` + dummyPlanet)\n\n  let url = `https://swapi.dev/api/people/${params.id}`;\n\n  //    debugger;\n  async function fetchPerson() {\n    try {\n      const fetchedPerson = await fetch(url).then(res => res.json());\n      // dummyPerson = fetchedPerson\n      setFoundPerson(fetchedPerson);\n      setPlanetID(getPlanetIdFromUrl(fetchedPerson.homeworld));\n    } catch (ex) {\n      console.error(`Error reading person ${params.id} data.`, ex.message);\n    }\n    // setFoundPerson(dummyPerson)\n  }\n\n  useEffect(() => {\n    fetchPerson();\n  }, []);\n  console.log(dummyPerson);\n  console.log(foundPerson);\n\n  // need this guy \n  console.log(params.id);\n  let dummyPlanet = -1;\n  // useEffect( ()=> {getPlanetIdFromUrl(foundPerson.homeworld)}, [])\n\n  //   console.log(`Homeworld is ` + getPlanetIdFromUrl(foundPerson.homeworld))\n  //   const [planetID,setPlanetID] = useState(-1)\n  //   setPlanetID(getPlanetIdFromUrl(foundPerson.homeworld));\n\n  //   console.log(`planet ID is ` + getPlanetIdFromUrl(foundPerson.homeworld))\n  console.log(`planet id is ` + planetId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"generalInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: foundPerson.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Height: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"height\",\n          children: foundPerson.height\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 28\n        }, this), \" cm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mass: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"mass\",\n          children: foundPerson.mass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 26\n        }, this), \" kg\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Born: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"birth_year\",\n          children: foundPerson.birth_year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"planets\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Homeworld\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"homeworld\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"films\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Films appeared in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(PersonPage, \"Zaid7i+su6WMINZj+FEZxSf7+LM=\", false, function () {\n  return [useParams];\n});\n_c = PersonPage;\nvar _c;\n$RefreshReg$(_c, \"PersonPage\");","map":{"version":3,"names":["useParams","useState","useEffect","PersonPage","params","foundPerson","setFoundPerson","planetId","setPlanetID","dummyPerson","getIdFromUrl","entityName","url","re","RegExp","matches","match","dummyPlanet","getFilmIdFromUrl","getPlanetIdFromUrl","id","fetchPerson","fetchedPerson","fetch","then","res","json","homeworld","ex","console","error","message","log","name","height","mass","birth_year"],"sources":["C:/Users/wasadmin/Documents/SWAPIReact/src/PersonPage.js"],"sourcesContent":["//use useParams \r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nexport function PersonPage() {\r\n    const params = useParams()\r\n    const [foundPerson, setFoundPerson] = useState({})\r\n    const [planetId, setPlanetID] = useState({})\r\n    let dummyPerson = {};\r\n    \r\n    const getIdFromUrl = (entityName, url) => {\r\n        //debugger\r\n        const re = new RegExp(`.*${entityName}\\/(\\\\d+).*`);\r\n        const matches = url.match(re)\r\n        if (!matches) throw `Bad URL. Not a ${entityName} URL.`\r\n        dummyPlanet = matches[1]\r\n        // return matches[1]\r\n      }  \r\n      \r\n      const getFilmIdFromUrl = url => getIdFromUrl(\"films\", url)\r\n      const getPlanetIdFromUrl = url => getIdFromUrl(\"planets\", url)\r\n      \r\n    //   console.log(`dummy planet is ` + dummyPlanet)\r\n\r\n\r\n    let url = `https://swapi.dev/api/people/${params.id}`;\r\n    \r\n\r\n\r\n    \r\n//    debugger;\r\n    async function fetchPerson() {\r\n        try {\r\n            const fetchedPerson = await fetch(url)\r\n            .then(res => res.json())\r\n            // dummyPerson = fetchedPerson\r\n            setFoundPerson(fetchedPerson)\r\n            setPlanetID(getPlanetIdFromUrl(fetchedPerson.homeworld)) \r\n        }\r\n        catch (ex) {\r\n          console.error(`Error reading person ${params.id} data.`, ex.message);\r\n        }\r\n        // setFoundPerson(dummyPerson)\r\n    }\r\n\r\n    useEffect( ()=> {fetchPerson()}, [])\r\n      console.log(dummyPerson)\r\n      console.log(foundPerson);\r\n      \r\n      // need this guy \r\n      console.log(params.id);\r\n    \r\n      let dummyPlanet = -1\r\n        // useEffect( ()=> {getPlanetIdFromUrl(foundPerson.homeworld)}, [])\r\n    \r\n            \r\n    //   console.log(`Homeworld is ` + getPlanetIdFromUrl(foundPerson.homeworld))\r\n    //   const [planetID,setPlanetID] = useState(-1)\r\n    //   setPlanetID(getPlanetIdFromUrl(foundPerson.homeworld));\r\n\r\n    //   console.log(`planet ID is ` + getPlanetIdFromUrl(foundPerson.homeworld))\r\n    console.log(`planet id is `+ planetId)\r\n    return (\r\n        <>\r\n            <h1 id=\"name\"></h1>\r\n            <section id=\"generalInfo\">\r\n                <h2>{foundPerson.name}</h2>\r\n                <p>Height: <span id=\"height\">{foundPerson.height}</span> cm</p>\r\n                <p>Mass: <span id=\"mass\">{foundPerson.mass}</span> kg</p>\r\n                <p>Born: <span id=\"birth_year\">{foundPerson.birth_year}</span></p>\r\n            </section>\r\n            <section id=\"planets\">\r\n                <h3>Homeworld</h3>\r\n                <p><span id=\"homeworld\"></span></p>\r\n            </section>\r\n            <section id=\"films\">\r\n                <h3>Films appeared in</h3>\r\n                <ul></ul>\r\n            </section>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA;AACA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAG5C,OAAO,SAASC,UAAU,GAAG;EAAA;EACzB,MAAMC,MAAM,GAAGJ,SAAS,EAAE;EAC1B,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,IAAIQ,WAAW,GAAG,CAAC,CAAC;EAEpB,MAAMC,YAAY,GAAG,CAACC,UAAU,EAAEC,GAAG,KAAK;IACtC;IACA,MAAMC,EAAE,GAAG,IAAIC,MAAM,CAAE,KAAIH,UAAW,YAAW,CAAC;IAClD,MAAMI,OAAO,GAAGH,GAAG,CAACI,KAAK,CAACH,EAAE,CAAC;IAC7B,IAAI,CAACE,OAAO,EAAE,MAAO,kBAAiBJ,UAAW,OAAM;IACvDM,WAAW,GAAGF,OAAO,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;;EAED,MAAMG,gBAAgB,GAAGN,GAAG,IAAIF,YAAY,CAAC,OAAO,EAAEE,GAAG,CAAC;EAC1D,MAAMO,kBAAkB,GAAGP,GAAG,IAAIF,YAAY,CAAC,SAAS,EAAEE,GAAG,CAAC;;EAEhE;;EAGA,IAAIA,GAAG,GAAI,gCAA+BR,MAAM,CAACgB,EAAG,EAAC;;EAKzD;EACI,eAAeC,WAAW,GAAG;IACzB,IAAI;MACA,MAAMC,aAAa,GAAG,MAAMC,KAAK,CAACX,GAAG,CAAC,CACrCY,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC;MACxB;MACApB,cAAc,CAACgB,aAAa,CAAC;MAC7Bd,WAAW,CAACW,kBAAkB,CAACG,aAAa,CAACK,SAAS,CAAC,CAAC;IAC5D,CAAC,CACD,OAAOC,EAAE,EAAE;MACTC,OAAO,CAACC,KAAK,CAAE,wBAAuB1B,MAAM,CAACgB,EAAG,QAAO,EAAEQ,EAAE,CAACG,OAAO,CAAC;IACtE;IACA;EACJ;;EAEA7B,SAAS,CAAE,MAAK;IAACmB,WAAW,EAAE;EAAA,CAAC,EAAE,EAAE,CAAC;EAClCQ,OAAO,CAACG,GAAG,CAACvB,WAAW,CAAC;EACxBoB,OAAO,CAACG,GAAG,CAAC3B,WAAW,CAAC;;EAExB;EACAwB,OAAO,CAACG,GAAG,CAAC5B,MAAM,CAACgB,EAAE,CAAC;EAEtB,IAAIH,WAAW,GAAG,CAAC,CAAC;EAClB;;EAGJ;EACA;EACA;;EAEA;EACAY,OAAO,CAACG,GAAG,CAAE,eAAc,GAAEzB,QAAQ,CAAC;EACtC,oBACI;IAAA,wBACI;MAAI,EAAE,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAM,eACnB;MAAS,EAAE,EAAC,aAAa;MAAA,wBACrB;QAAA,UAAKF,WAAW,CAAC4B;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,eAC3B;QAAA,WAAG,UAAQ;UAAM,EAAE,EAAC,QAAQ;UAAA,UAAE5B,WAAW,CAAC6B;QAAM;UAAA;UAAA;UAAA;QAAA,QAAQ,OAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,eAC/D;QAAA,WAAG,QAAM;UAAM,EAAE,EAAC,MAAM;UAAA,UAAE7B,WAAW,CAAC8B;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ,OAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI,eACzD;QAAA,WAAG,QAAM;UAAM,EAAE,EAAC,YAAY;UAAA,UAAE9B,WAAW,CAAC+B;QAAU;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5D,eACV;MAAS,EAAE,EAAC,SAAS;MAAA,wBACjB;QAAA,UAAI;MAAS;QAAA;QAAA;QAAA;MAAA,QAAK,eAClB;QAAA,uBAAG;UAAM,EAAE,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7B,eACV;MAAS,EAAE,EAAC,OAAO;MAAA,wBACf;QAAA,UAAI;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1B;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACH;EAAA,gBACX;AAEX;AAAC,GA7EejC,UAAU;EAAA,QACPH,SAAS;AAAA;AAAA,KADZG,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}